
@using Medulla.Editor.Client.AppRenderer;
@using Medulla.Editor.Client.AppRenderer.Options;
@using Medulla.Editor.Client.AppRenderer.RendererComponents;



<div style="display: grid; grid-template-columns: 70% auto;">
    <div>
        <Renderer AppNodeList=appNodeList />
    </div>

    <div class="Box" style="height: 100vh">

        <nav class="menu" aria-label="Person settings">
            @foreach (var appNode in appNodeList)
            {
                <span class="menu-item" aria-current="page">
                    @appNode.Component
                    <MenuItemButton OnClick="@nodeMinus">
                        <Minus />
                    </MenuItemButton>
                    <MenuItemButton OnClick="@nodeCopy">
                        <Copy />
                    </MenuItemButton>
                    <MenuItemButton OnClick="@nodeSettings">
                        <Settings />
                    </MenuItemButton>
                    <MenuItemButton OnClick="@nodeUpArrow">
                        <UpArrow />
                    </MenuItemButton>
                    <MenuItemButton OnClick="@nodeDownArrow">
                        <DownArrow />
                    </MenuItemButton>

                    <span @onclick="@nodeChildren" class="Label">
                        <div style="
                            position: relative;
                            top: 1px;">
                            <span style="font-weight: bold;font-size: 15px;padding: 4px;">
                                @appNode?.Children.Count
                            </span>
                        </div>
                    </span>
                </span>
            }


            <span @onclick="@newcomponent" class="menu-item" href="#url">
                New Component
            </span>
        </nav>

    </div>
</div>

@code {

    private void nodeMinus()
    {
        Console.WriteLine("clicked minus button");
    }

    private void nodePlus()
    {
        Console.WriteLine("clicked plus button");
    }

    private void nodeCopy()
    {
        Console.WriteLine("clicked copy button");
    }

    private void nodeSettings()
    {
        Console.WriteLine("clicked settings button");
    }

    private void nodeUpArrow()
    {
        Console.WriteLine("clicked up arrow button");
    }

    private void nodeDownArrow()
    {
        Console.WriteLine("clicked down arrow button");
    }

    private void nodeChildren()
    {
        Console.WriteLine("clicked children button");
    }

    private void newcomponent()
    {
        Console.WriteLine("clicked new component button");
    }

    private List<AppNode> appNodeList = new List<AppNode>() {
        new AppNode() {
            Component = "Button",
            Options = new () {
                Options = new () {
                    new () {
                        Key = new Key() {
                            KeyName = "Content"
                        },
                        Value = new Value() {
                            ValueOfKey = "Create Something Awesome!"
                        }
                    }
                }
            }
        },
        new AppNode() {
            Component = "Button",
            Options = new () {
                Options = new () {
                    new () {
                        Key = new Key() {
                            KeyName = "Content"
                        },
                        Value = new Value() {
                            ValueOfKey = "Create Something Awesome!"
                        }
                    }
                }
            }
        },
        new AppNode() {
            Component = "Box",
            Options = new () {
                Options = new () {
                    new () {
                        Key = new Key() {
                            KeyName = "Content"
                        },
                        Value = new Value() {
                            ValueOfKey = "Create Something Awesome!"
                        }
                    }
                }
            },
            Children = new() {
                new AppNode() {
                Component = "Button",
                Options = new () {
                    Options = new () {
                        new () {
                            Key = new Key() {
                                KeyName = "Content"
                            },
                            Value = new Value() {
                                ValueOfKey = "Create Something Awesome!"
                            }
                        }
                    }
                }
            },
            }
        },
    };


}


