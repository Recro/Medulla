<div class="TimelineItem TimelineItem--condensed">
    @{
        var hasNoChildren = PropertyMenuStructureNode.HasNoChildren();
    }
    <PropertyListItemIcon PropertyMenuStructureNode="PropertyMenuStructureNode" PropertiesMenu="PropertiesMenu" />
    <div class="TimelineItem-body">
        @PropertyMenuStructureNode.Nameable.Title

        @if (hasNoChildren)
        {
            @if (@PropertyMenuStructureNode.InputType == InputType.TextInput)
            {
                <p>
                    <input class="form-control" type="text" placeholder="@PropertyMenuStructureNode.Nameable.Title" aria-label="Repository description" />
                </p>
            } else if (@PropertyMenuStructureNode.InputType == InputType.TextArea)
            {
                <p>
                    <textarea class="form-control" type="text" placeholder="@PropertyMenuStructureNode.Nameable.Title" aria-label="Repository description" />
                </p>
            }

        }
        else
        {
            @if (PropertyMenuStructureNode.IsOpen)
            {
                <PropertyList PropertiesMenu="PropertiesMenu" PropertyMenuStructure="PropertyMenuStructureNode.PropertyMenuStructure"/>
            }
            else
            {
                Console.WriteLine("PropertyMenuStructureNode.PropertyMenuStructure was closed");
            }
        }

    </div>
</div>

@code {

    [Parameter]
    public PropertyMenuStructureNode PropertyMenuStructureNode { get; set; } = new();

    [Parameter]
    public PropertiesMenu? PropertiesMenu { get; set; }


}
