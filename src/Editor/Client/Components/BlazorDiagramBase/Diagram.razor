@using Medulla.Editor.Client.Abstractions.ObjectComposition
@using Blazor.Diagrams.Core.Models.Base
<div class="wrapper">
    <div class="diagram-container">
        <CascadingValue Value="NodeDiagram">
            <DiagramCanvas></DiagramCanvas>
        </CascadingValue>
    </div>
    <div style="width:25vw">
        <PropertiesMenu PropertyMenuStructure="GetMenu()" />
    </div>
</div>

@code {

    private DatabaseTableModel? ActiveModel { get; set; }

    public enum DiagramSwitch
    {
        DatabaseDesigner,
        WorkflowDesigner
    }

    [Parameter]
    public DiagramSwitch DiagramSwitchOption { get; set; } = DiagramSwitch.DatabaseDesigner;

    private PropertyMenuStructure GetMenu()
    {
        if (DiagramSwitchOption == DiagramSwitch.DatabaseDesigner)
        {
            if (ActiveModel != null)
            {
                return new PropertyMenuStructure()
                {
                    Nameable = Nameable.NewNameable("Model", null),
                    PropertyMenuStructureNodes = new ()
                    {
                        new()
                        {
                            Nameable = Nameable.NewNameable("Model", "Model"),
                            InputType = InputType.DatabaseTableModel,
                            OnValueChange = (value =>
                            {
                                Console.WriteLine("Changed");
                            })
                        }
                    }
                };
            }
            else
            {
                return new PropertyMenuStructure()
                {
                    Nameable = Nameable.NewNameable("Database Designer", null),
                    PropertyMenuStructureNodes = new ()
                    {
                        new()
                        {
                            Nameable = Nameable.NewNameable("Add Table", "Add database table"),
                            InputType = InputType.Button,
                            OnValueChange = (value =>
                            {
                                Console.WriteLine("Button Clicked");
                                var table = new DatabaseTableModel();
                                table.Name = "Test";
                                table.Selected = true;
                                AddTable(table);
                            })
                        }
                    }
                };
            }
        }
        else
        {
            return new PropertyMenuStructure();
        }
    }


}
