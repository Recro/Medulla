@using Medulla.Editor.Client.Abstractions.ObjectComposition
@using Blazor.Diagrams.Core.Models.Base
@using Medulla.WorkflowDesigner.Client.Library.PropertyMenuStructureFactory
<div class="wrapper">
    <div class="diagram-container">
        <CascadingValue Value="NodeDiagram">
            <DiagramCanvas></DiagramCanvas>
        </CascadingValue>
    </div>
    <div style="width:25vw">
        <PropertiesMenu PropertyMenuStructure="GetMenu()" />
    </div>
</div>

@code {

    private DatabaseTableModel? ActiveModel { get; set; }

    public enum DiagramSwitch
    {
        DatabaseDesigner,
        WorkflowDesigner
    }

    [Parameter]
    public DiagramSwitch DiagramSwitchOption { get; set; } = DiagramSwitch.DatabaseDesigner;

    private PropertyMenuStructure GetMenu()
    {
        if (DiagramSwitchOption == DiagramSwitch.DatabaseDesigner)
        {
            if (ActiveModel != null)
            {
                return PropertyMenuStructureFactory.GetStructure(new DatabaseModelMenuFactory(), value =>
                {
                    Console.WriteLine("Button Clicked");
                    var table = new DatabaseTableModel();
                    table.Name = "Test";
                    table.Selected = true;
                    AddTable(table);
                });
            }
            else
            {
                return PropertyMenuStructureFactory.GetStructure(new AddDatabaseTableMenuStructureFactory(), value =>
                {
                    Console.WriteLine("Changed");
                });
            }
        }
        else
        {
            return new PropertyMenuStructure();
        }
    }


}
