@using System.ComponentModel.DataAnnotations
<Window WindowTitle="Editor View">
    @if (IsPreview)
    {
        <style>
            .editor-place {
                display:  none!important;
            }
            .editor-border {
                border: unset!important;
            }
        </style>
    }
    @{
        var OnChangeDropdown = new Dictionary<string, Action<Dictionary<string, string>>>()
    {
                    {"EventCallback", (Dictionary<string,string> test) =>
                    {
                        if (test["Value"] == "editor")
                        {
                            IsPreview = false;
                        }
                        else
                        {
                            IsPreview = true;
                        }
                        Editor.StateChanged();
                    }}
                };
    }
    <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8" style="height: calc(100vh - 65px);">
        <Dropdown Title="Preview/Editor" DropdownItems="IsActiveDropDownItems" PropertyName="Test" OnChange="OnChangeDropdown" />
        <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
            <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                <EditorRenderer EditorViewNode="@EditorViewNode"/>
            </div>
        </div>
    </div>
</Window>

@code {
    private Dictionary<string, string> IsActiveDropDownItems = new Dictionary<string, string>()
    {
        {"Editor", "editor"},
        {"Preview", "preview"}
    };

    public bool IsPreview { get; set; } = false;
    
    [Parameter]
    [Required]
    public EditorViewNode EditorViewNode { get; set; } = default!;

    [CascadingParameter]
    [Required]
    public Editor Editor { get; set; } = default!;

}
