@using Medulla.Frontend.Client.Library.Utilities.Unique
@inherits BaseComponent

<div style="position: relative">

@if (!Editor.PreviewMode)
{
    @if (Editor.CurrentComponent != null && Editor.CurrentComponent.UniqueId.Equals(this.UniqueId))
    {
        <svg @onclick="Unselect" style="    height: 20px;
                                            cursor: pointer;
                                            background: green;
                                            border-radius: 50px;
                                            position: absolute;
                                            top: 1.5px;
                                            left: 23px;
                                            color: lightgray;
                                            z-index: 1000;" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
    }
    else
    {
        <svg @onclick="() => this.UpdatePropertiesWindow(Editor, this.UniqueId)" style="    height: 20px;
                                                                                            cursor: pointer;
                                                                                            background: gray;
                                                                                            border-radius: 50px;
                                                                                            position: absolute;
                                                                                            top: 1.5px;
                                                                                            left: 23px;
                                                                                            color: lightgray;
                                                                                            z-index: 1000;" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
    }
}

<div class="subnav">
  <nav class="subnav-links" aria-label="Repository">
    <a class="subnav-item" href="#url" aria-current="page">Item 1</a>
    <a class="subnav-item" href="#url">Item 2</a>
    <a class="subnav-item" href="#url">Item 3</a>
  </nav>
  <div class="subnav-search float-left">
    <input type="search" name="name" class="form-control subnav-search-input" value="" aria-label="Search site" />
    <!-- <%= octicon "search", class: "subnav-search-icon" %> -->
    <svg class="subnav-search-icon octicon octicon-search" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"> <path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z" /> </svg>
  </div>
</div>

</div>

@code {



    protected override Properties GetProperties()
    {
        Properties properties = new();
        return properties;
    }

    protected override bool IsClickable()
    {
        return false;
    }

    protected override bool DoesImplementPadding()
    {
        return true;
    }

    protected override bool DoesImplementMargin()
    {
        return true;
    }

    protected override bool DoesImplementFonts()
    {
        return true;
    }

    protected override bool IsHoverComponentContainer()
    {
        return false;
    }

    protected override void AfterAddComponent(Editor editor, UniqueId uniqueId)
    {

    }

}


<style>

</style>

