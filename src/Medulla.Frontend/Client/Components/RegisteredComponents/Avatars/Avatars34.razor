@using Medulla.Frontend.Client.Library.Utilities.Unique
@inherits BaseComponent

<div style="position: relative">

@if (!Editor.PreviewMode)
{
    @if (Editor.CurrentComponent != null && Editor.CurrentComponent.UniqueId.Equals(this.UniqueId))
    {
        <svg @onclick="Unselect" style="    height: 20px;
                                            cursor: pointer;
                                            background: green;
                                            border-radius: 50px;
                                            position: absolute;
                                            top: 1.5px;
                                            left: 23px;
                                            color: lightgray;
                                            z-index: 1000;" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
    }
    else
    {
        <svg @onclick="() => this.UpdatePropertiesWindow(Editor, this.UniqueId)" style="    height: 20px;
                                                                                            cursor: pointer;
                                                                                            background: gray;
                                                                                            border-radius: 50px;
                                                                                            position: absolute;
                                                                                            top: 1.5px;
                                                                                            left: 23px;
                                                                                            color: lightgray;
                                                                                            z-index: 1000;" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
    }
}

<img class="avatar avatar-1 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=32" />
<img class="avatar avatar-2 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=40" />
<img class="avatar avatar-3 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=48" />
<img class="avatar avatar-4 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=56" />
<img class="avatar avatar-5 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=64" />
<img class="avatar avatar-6 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=80" />
<img class="avatar avatar-7 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=96" />
<img class="avatar avatar-8 mr-2" alt="jonrohan" src="https://github.com/jonrohan.png?v=3&s=128" />

</div>

@code {



    protected override Properties GetProperties()
    {
        Properties properties = new();
        return properties;
    }

    protected override bool IsClickable()
    {
        return false;
    }

    protected override bool DoesImplementPadding()
    {
        return true;
    }

    protected override bool DoesImplementMargin()
    {
        return true;
    }

    protected override bool DoesImplementFonts()
    {
        return true;
    }

    protected override bool IsHoverComponentContainer()
    {
        return false;
    }

    protected override void AfterAddComponent(Editor editor, UniqueId uniqueId)
    {

    }

}


<style>

</style>

