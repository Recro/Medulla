// Licensed to the Medulla Contributors under one or more agreements.
// The Medulla Contributors licenses this file to you under the Apache 2.0 license.
// See the LICENSE file in the project root for more information.

syntax = "proto3";

option csharp_namespace = "GrpcDatabaseService";

package medulladatabase;

service DatabaseSvc {
  // Create databases rpcs
  rpc CreateDatabases (CreateDatabasesRequest) returns (CreateDatabasesResponse) {}
  rpc GetDatabases (GetDatabasesRequest) returns (GetDatabasesResponse) {}
  rpc UpdateDatabases (UpdateDatabasesRequest) returns (UpdateDatabasesResponse) {}
  rpc DeleteDatabases (DeleteDatabasesRequest) returns (DeleteDatabasesResponse) {}
  rpc CreateDatabaseResources (CreateDatabaseResourcesRequest) returns (CreateDatabaseResourcesResponse) {}


  // Query Models rpcs
  //  rpc QueryModel (QueryModelRequest) returns (QueryModelResponse) {}

}

message CreateDatabaseResourcesRequest {
  string Name = 1;
  string User = 2;
  string Password = 3;
  string ServiceName = 4;
  string DatabaseName = 5;
}

message CreateDatabaseResourcesResponse {
  bool isCreated = 1;
}

message Column {
  string columnName = 1;
  string type = 2;
  bool allowNull = 3;
  string defaultValue = 4;
  bool primaryKey = 5;
  string fieldName = 6;
  string unique = 7;
  string comment = 8;
}

message Model {
  string name = 1;
  repeated Column column = 2;
}

message Database {
  string name = 1;
  string dialect = 2;
  repeated Model models = 3;
}

message CreateDatabasesRequest {
  repeated Database database = 1;
}

message CreateDatabasesResponse {
  bool isCreated = 1;
}

message GetDatabasesRequest {
  string name = 1;
}

message Data {
  string name = 1;
  repeated Database databases = 2;
}

message GetDatabasesResponse {
  repeated Data data = 1;
}

message UpdateDatabasesRequest {
  string uuid = 1;
  repeated Database database = 2;
}

message UpdateDatabasesResponse {
  bool isUpdated = 1;
}

message DeleteDatabasesRequest {
  string name = 1;
}

message DeleteDatabasesResponse {
  bool isDeleted = 1;
}
