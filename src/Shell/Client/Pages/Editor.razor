@* Licensed to the Medulla Contributors under one or more agreements. *@
@* The Medulla Contributors licenses this file to you under the Apache 2.0 license. *@
@* See the LICENSE file in the project root for more information. *@

@page "/editor"

@using Medulla.WorkflowDesigner.Client.Library;
@using Grpc.Net.Client.Web;
@using Grpc.Net.Client;
@using GrpcDatabaseService;
@using Microsoft.AspNetCore.Components;
@using Google.Protobuf.Collections;
@using Microsoft.AspNetCore.Components.Infrastructure;
@using Medulla.WorkflowDesigner.Client.Components.WorkflowDesigner;
@using Model = GrpcDatabaseService.Model;
@inject DatabaseSvc.DatabaseSvcClient _client


<PageTitle>Medulla Editor</PageTitle>
<EditorPage UpdateDatabase="UpdateDatabase" />

@code {

    void UpdateDatabase(List<WorkflowNodeInstance> nodes)
    {
        _client.CreateDatabases(new CreateDatabasesRequest()
        {
            Database = { new []
            {
                new Database()
                {
                    Dialect = "mysql",
                    Name = "test-medulla",
                    Models =
                    {
                        new []
                        {
                            new Model()
                            {
                                Name = "test",
                                Column =
                                {
                                    new []
                                    {
                                        new Column()
                                        {
                                            FieldName = "test",
                                            Comment = "test comment",
                                            Type = "VARCHAR(100)",
                                            Unique = "test",
                                            AllowNull = false,
                                            PrimaryKey = true,
                                            ColumnName = "test",
                                            DefaultValue = ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } }
        });
    }

}
